常量 $标示词 = '富强,民主,文明,和谐,自由,平等,公正,法治,爱国,敬业'
常量 $分隔词 = '诚信,友善';


常量 $标示数组 = 新 有序列表(字符.分割($标示词,","))
常量 $分隔数组 = 新 有序列表(字符.分割($分隔词,","));

函数 取分隔() {

返 $分隔数组.读取(数学.随机数(0,1));

}

函数 取所有($键值) {

返 $标示数组.读取($键值);

}

函数 解码($文本) {

如 ($文本 == "") 抛 ""

量 $长度 = $文本.length();

量 $输出 = "";

量 $缓存 = "";

循环 (量 $键值 = 0;$键值 < $长度;) {

如 ($键值 + 2 > $长度) 抛 "";

量 $截取 = $文本.substring($键值,$键值 + 2);

如 ($标示数组.检查($截取)) {

$缓存 += $标示数组.indexOf($截取);

} 另 如($分隔数组.检查($截取)) {

如 ($缓存 == "") 续;

$输出 += 新 Character($缓存);

$缓存 = "";

} 另 {

抛 "";

}

$键值 += 2;

}

返 $输出;

}

函数 编码($文本) {

量 $输出 = "";

循环 (量 $键值 = 0;$键值 < $文本.length();$键值++) {

量 $编码文本 = 字符.转换($文本.charAt($键值).toString());

循环 (量 $编码键值 = 0;$编码键值 < $编码文本.length();$编码键值++) {

$输出 += 取所有($编码文本.substring($编码键值,$编码键值 + 1));

}

$输出 += 取分隔();


}

返 $输出;

}



常量 $布局 = 打开布局(新 布局_滚动界面(当前界面));

置标题("某编码器");

取导航按钮().结束界面(当前界面);

$布局.置填充("填充");

常量 $输入 = 新 输入框($布局);

$输入.置默认文本("输入文本 ~");

常量 $编码 = 新 按钮($布局);

$编码.置文本("编码");

$编码.置宽度("最大");

$编码.置单击事件(函数() {

试 {

$输入.置文本(编码($输入.取文本()));

提示.普通("编码成功 ~");

} 捕($错误) {

提示.普通("编码失败 ~");

}

});

常量 $解码 = 新 按钮($布局);

$解码.置宽度("最大");

$解码.置文本("解码");

$解码.置单击事件(函数() {

试 {

$输入.置文本(解码($输入.取文本()));

提示.普通("解码成功 ~");

} 捕($错误) {

提示.警告("解码失败 ~");

}

});